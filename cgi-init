#!/bin/sh

show_help() {
	echo "Usage: cgi-init [<dir>]"
	echo
	echo "Options:"
	echo "  <dir>  Store CGI data in <dir>."
	echo
	echo "Example:"
	echo "  cgi=\$(cgi-init)"
	echo
	echo "Directory structure:"
	echo "  \${cgi}/message-body  Raw request message body"
	echo "  \${cgi}/params        GET/POST parameters"
	echo "  \${cgi}/cookies       HTTP cookies"
}

while getopts h opt
do
	case $opt in
		h|'?')
			show_help
			exit
			;;
	esac
done
shift $((OPTIND - 1))

# Create CGI directory
if test "$#" -gt 0
then
	dir=$1
	mkdir -p "$dir"
else
	dir=$(mktemp -d)
fi

# Store request message body
cat > "${dir}/message-body"

# Read GET/POST parameters
mkdir -p "${dir}/params"

cat_with_header() {
	echo "Content-type: ${CONTENT_TYPE}"
	cat
}

read_params() {
	{ cat; echo; } | tr '=&' '\t\n' | while read key val
	do
		key=$(urlencode -d "$key")

		if test -n "$key" -a -n "$val"
		then
			urlencode -d "$val" > "${dir}/params/${key}"
		fi
	done
}

# Extract MIME-encoded POST request
if echo "$CONTENT_TYPE" | grep -q 'multipart/form-data'
then
	cat_with_header < "${dir}/message-body" | ripmime -i - --formdata -q -d "${dir}/params" >/dev/null
# Read params from url-encoded POST request
elif echo "$CONTENT_TYPE" | grep -q 'application/x-www-form-urlencoded'
then
	read_params < "${dir}/message-body"
fi

# Read params from url-encoded query string
printf %s "$QUERY_STRING" | read_params

# Read cookies
mkdir -p "${dir}/cookies"

echo "$HTTP_COOKIE" | tr '=;' '\t\n' | while read key val
do
	key=$(urlencode -d "$key")

	if test -n "$key" -a -n "$val"
	then
		urlencode -d "$val" > "${dir}/cookies/${key}"
	fi
done

# Return CGI directory
echo "$dir"
